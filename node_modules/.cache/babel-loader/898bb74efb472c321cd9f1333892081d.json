{"ast":null,"code":"import _classCallCheck from \"/Users/paul/Sites/implemenatation-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paul/Sites/implemenatation-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/paul/Sites/implemenatation-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paul/Sites/implemenatation-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/paul/Sites/implemenatation-dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/paul/Sites/implemenatation-dashboard/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { Container, Nav } from \"./styled-components\"; // fusioncharts\n\nimport Chart from 'react-apexcharts'; // import \"./charts-theme\";\n\nimport config from \"./config\";\nimport UserImg from \"../assets/images/wp.jpg\";\nvar url = \"https://sheets.googleapis.com/v4/spreadsheets/\".concat(config.spreadsheetId, \"/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=\").concat(config.apiKey);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      items: [],\n      options: {\n        chart: {\n          height: 70,\n          type: \"radialBar\"\n        },\n        plotOptions: {\n          radialBar: {\n            hollow: {\n              margin: 0,\n              size: \"50%\"\n            },\n            dataLabels: {\n              showOn: \"always\",\n              name: {\n                show: false\n              },\n              value: {\n                color: \"#111\",\n                fontSize: \"10px\",\n                show: false\n              }\n            }\n          }\n        },\n        stroke: {\n          lineCap: \"round\"\n        }\n      },\n      series: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var batchRowValues = data.valueRanges[0].values;\n        var rows = [];\n\n        for (var i = 1; i < batchRowValues.length; i++) {\n          var rowObject = {};\n\n          for (var j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n\n          rows.push(rowObject);\n        }\n\n        var totalCalls = rows.length; // setting state\n\n        console.log(rows);\n\n        _this2.setState({\n          items: rows,\n          totalCalls: totalCalls\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"navbar navbar-expand-lg fixed-top is-white is-dark-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"navbar-brand h1 mb-0 text-large font-medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Workpal Implementation Dashboard\"), React.createElement(Container, {\n        className: \"navbar-nav ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"user-detail-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"img-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: UserImg,\n        className: \"rounded-circle\",\n        alt: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))))), React.createElement(Container, {\n        className: \"container-fluid pr-5 pl-5 pt-5 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"col-lg-3 col-sm-6 is-light-text mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"card grid-card is-card-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"card-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"is-dark-text-light letter-spacing text-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Calls this week\")), React.createElement(Container, {\n        className: \"card-value pt-4 text-x-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.totalCalls, React.createElement(\"span\", {\n        className: \"text-medium pl-2 is-dark-text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"calls\")))), React.createElement(Container, {\n        className: \"col-md-8 col-lg-9 is-light-text mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"card is-card-dark chart-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"row full-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Client\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Subject\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Agent\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Implementation Progress\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.items.map(function (call) {\n        return React.createElement(\"tr\", {\n          className: call.calls_complete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, call.calls_client), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, call.calls_subject), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, call.calls_agent), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(Chart, {\n          options: _this3.state.options,\n          series: [call.calls_progress],\n          type: \"radialBar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        })));\n      })))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/paul/Sites/implemenatation-dashboard/src/components/App.js"],"names":["React","Component","Container","Nav","Chart","config","UserImg","url","spreadsheetId","apiKey","App","state","items","options","chart","height","type","plotOptions","radialBar","hollow","margin","size","dataLabels","showOn","name","show","value","color","fontSize","stroke","lineCap","series","fetch","then","response","json","data","batchRowValues","valueRanges","values","rows","i","length","rowObject","j","push","totalCalls","console","log","setState","map","call","calls_complete","calls_client","calls_subject","calls_agent","calls_progress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Nav } from \"./styled-components\";\n\n// fusioncharts\nimport Chart from 'react-apexcharts'\n// import \"./charts-theme\";\n\nimport config from \"./config\";\nimport UserImg from \"../assets/images/wp.jpg\";\n\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      options: {\n        chart: {\n          height: 70,\n          type: \"radialBar\"\n        },\n        plotOptions: {\n        radialBar: {\n          hollow: {\n            margin: 0,\n            size: \"50%\"\n          },\n          \n          dataLabels: {\n            showOn: \"always\",\n            name: {\n              show: false\n            },\n            value: {\n              color: \"#111\",\n              fontSize: \"10px\",\n              show: false\n            }\n          }\n        }\n      },\n      stroke: {\n        lineCap: \"round\",\n      },\n    },\n    series: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        let batchRowValues = data.valueRanges[0].values;\n\n        const rows = [];\n        for (let i = 1; i < batchRowValues.length; i++) {\n          let rowObject = {};\n          for (let j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n          rows.push(rowObject);\n        }\n\n        let totalCalls = rows.length;\n        // setting state\n        console.log(rows);\n        this.setState({\n            items: rows,\n            totalCalls: totalCalls\n          });\n      });\n  }\n  render() {\n    return (\n      <Container>\n        {/* static navbar - top */}\n        <Nav className=\"navbar navbar-expand-lg fixed-top is-white is-dark-text\">\n          <Container className=\"navbar-brand h1 mb-0 text-large font-medium\">\n            Workpal Implementation Dashboard\n          </Container>\n          <Container className=\"navbar-nav ml-auto\">\n            <Container className=\"user-detail-section\">\n              <span className=\"img-container\">\n                <img src={UserImg} className=\"rounded-circle\" alt=\"user\" />\n              </span>\n            </Container>\n          </Container>\n        </Nav>\n\n        {/* content area start */}\n        <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\n          {/* row 1 - revenue */}\n          <Container className=\"row\">\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Calls this week\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.totalCalls}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    calls\n                  </span>\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-8 col-lg-9 is-light-text mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"row full-height\">\n                \n                      <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th>Client</th>\n                            <th>Subject</th>\n                            <th>Agent</th>\n                            <th>Implementation Progress</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {\n                            this.state.items.map(call => {\n                              return (\n                                <tr className = {call.calls_complete}>\n                                  <td>{call.calls_client}</td>\n                                  <td>{call.calls_subject}</td>\n                                  <td>{call.calls_agent}</td>\n                                  <td>\n                                    <Chart\n                                      options={this.state.options}\n                                      series={[call.calls_progress]}\n                                      type=\"radialBar\"\n                                    />\n                                  </td>\n                                </tr>\n                              )\n                            })\n                          }\n                        </tbody>\n                      </table>\n                      {/* <Table data={this.state.items}/> */}\n                </Container>\n              </Container>\n            </Container>\n        </Container>\n      </Container>\n    </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}